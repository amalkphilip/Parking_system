import java.sql.*;

public class Payment {
    private int slotId;
    private String username;
    private String method;
    private double amount;
    private String status;

    public Payment(int slotId, String username, String method, double amount) {
        this.slotId = slotId;
        this.username = username;
        this.method = method;
        this.amount = amount;
        this.status = "Pending";
    }

    public Payment(ResultSet rs) throws SQLException {
        this.slotId = rs.getInt("slot_id");
        this.username = rs.getString("username");
        this.method = rs.getString("method");
        this.amount = rs.getDouble("amount");
        this.status = rs.getString("status");
    }



    // Getters and Setters
    public int getSlotId() { return slotId; }
    public String getUsername() { return username; }
    public String getMethod() { return method; }
    public double getAmount() { return amount; }
    public String getStatus() { return status; }
    public void setStatus(String status) { this.status = status; }

    public boolean saveToDB() {
        try (Connection conn = Database.connect()) {
            String sql = "INSERT INTO payments (slot_id, username, method, amount, status) VALUES (?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, slotId);
            ps.setString(2, username);
            ps.setString(3, method);
            ps.setDouble(4, amount);
            ps.setString(5, "Success");
            return ps.executeUpdate() > 0;
        } catch(Exception ex) {
            return false;
        }
    }
}

public class PaymentController {
    
    public static boolean processPayment(Slot slot, String username, String paymentMethod, UserDashboardFrame dashboard) {
        // Process payment logic
        Payment payment = new Payment(slot.getId(), username, paymentMethod, 50.0);
        boolean paymentSaved = payment.saveToDB();
        
        if (paymentSaved) {
            // Update slot status
            boolean statusUpdated = SlotController.updateSlotStatus(slot.getId(), "Booked", username);
            if (statusUpdated) {
                dashboard.refreshData();
            }
            return statusUpdated;
        }
        return false;
    }
}
